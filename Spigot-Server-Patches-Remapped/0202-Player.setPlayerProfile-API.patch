From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sun, 18 Mar 2018 12:29:48 -0400
Subject: [PATCH] Player.setPlayerProfile API

This can be useful for changing name or skins after a player has logged in.

diff --git a/src/main/java/net/minecraft/entity/player/PlayerEntity.java b/src/main/java/net/minecraft/entity/player/PlayerEntity.java
index 9f52eb8c3c263b28bdf883da8811ef846b9d6e12..cd4d1981020c13b2e1eaca2b86529c2b4c45b8b3 100644
--- a/src/main/java/net/minecraft/entity/player/PlayerEntity.java
+++ b/src/main/java/net/minecraft/entity/player/PlayerEntity.java
@@ -159,7 +159,7 @@ public abstract class PlayerEntity extends LivingEntity {
     protected int field_175152_f;
     protected final float field_71102_ce = 0.02F;
     private int field_82249_h;
-    private final GameProfile field_146106_i;
+    private GameProfile field_146106_i; public final void setProfile(final GameProfile profile) { this.field_146106_i = profile; } // Paper - OBFHELPER
     private ItemStack field_184831_bT;
     private final CooldownTracker field_184832_bU;
     @Nullable
diff --git a/src/main/java/net/minecraft/network/login/ServerLoginNetHandler.java b/src/main/java/net/minecraft/network/login/ServerLoginNetHandler.java
index b11a86e82a46d5facb1bc6464f0ef35cb9781bf5..b5cf92447a3741dc9340ac6a6f8d5d1404625e9d 100644
--- a/src/main/java/net/minecraft/network/login/ServerLoginNetHandler.java
+++ b/src/main/java/net/minecraft/network/login/ServerLoginNetHandler.java
@@ -51,7 +51,7 @@ public class ServerLoginNetHandler implements IServerLoginNetHandler {
     public final NetworkManager field_147333_a;
     private ServerLoginNetHandler.State field_147328_g;
     private int field_147336_h;
-    private GameProfile field_147337_i;
+    private GameProfile field_147337_i; private void setGameProfile(final GameProfile profile) { this.field_147337_i = profile; } private GameProfile getGameProfile() { return this.field_147337_i; } // Paper - OBFHELPER
     private final String field_147334_j;
     private SecretKey field_147335_k;
     private ServerPlayerEntity field_181025_l;
@@ -305,12 +305,12 @@ public class ServerLoginNetHandler implements IServerLoginNetHandler {
                             final org.bukkit.craftbukkit.CraftServer server = ServerLoginNetHandler.this.field_147327_f.server;
 
                             // Paper start
-                            PlayerProfile profile = Bukkit.createProfile(uniqueId, playerName);
+                            PlayerProfile profile = CraftPlayerProfile.asBukkitMirror(getGameProfile());
                             AsyncPlayerPreLoginEvent asyncEvent = new AsyncPlayerPreLoginEvent(playerName, address, uniqueId, profile);
                             server.getPluginManager().callEvent(asyncEvent);
                             profile = asyncEvent.getPlayerProfile();
-                            profile.complete();
-                            field_147337_i = CraftPlayerProfile.asAuthlibCopy(profile);
+                            profile.complete(true);
+                            setGameProfile(CraftPlayerProfile.asAuthlib(profile));
                             playerName = field_147337_i.getName();
                             uniqueId = field_147337_i.getId();
                             // Paper end
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index eefba4d80cc7b403d31727a0640ed7faa98f8b73..34a5a193db7ccd7ea910eb45136e349e09d6d419 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -1,6 +1,8 @@
 package org.bukkit.craftbukkit.entity;
 
 import com.destroystokyo.paper.Title;
+import com.destroystokyo.paper.profile.CraftPlayerProfile;
+import com.destroystokyo.paper.profile.PlayerProfile;
 import com.google.common.base.Preconditions;
 import com.google.common.collect.ImmutableSet;
 import com.google.common.io.BaseEncoding;
@@ -25,6 +27,49 @@ import java.util.WeakHashMap;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 import javax.annotation.Nullable;
+import net.minecraft.advancements.AdvancementProgress;
+import net.minecraft.advancements.PlayerAdvancements;
+import net.minecraft.entity.Entity;
+import net.minecraft.entity.LivingEntity;
+import net.minecraft.entity.ai.attributes.AttributeModifierManager;
+import net.minecraft.entity.ai.attributes.Attributes;
+import net.minecraft.entity.ai.attributes.ModifiableAttributeInstance;
+import net.minecraft.entity.player.PlayerEntity;
+import net.minecraft.entity.player.ServerPlayerEntity;
+import net.minecraft.inventory.container.Container;
+import net.minecraft.nbt.CompoundNBT;
+import net.minecraft.network.PacketBuffer;
+import net.minecraft.network.play.ServerPlayNetHandler;
+import net.minecraft.network.play.server.SChangeBlockPacket;
+import net.minecraft.network.play.server.SChatPacket;
+import net.minecraft.network.play.server.SCustomPayloadPlayPacket;
+import net.minecraft.network.play.server.SEntityPropertiesPacket;
+import net.minecraft.network.play.server.SMapDataPacket;
+import net.minecraft.network.play.server.SPlaySoundEffectPacket;
+import net.minecraft.network.play.server.SPlaySoundEventPacket;
+import net.minecraft.network.play.server.SPlaySoundPacket;
+import net.minecraft.network.play.server.SPlayerListHeaderFooterPacket;
+import net.minecraft.network.play.server.SPlayerListItemPacket;
+import net.minecraft.network.play.server.SSetExperiencePacket;
+import net.minecraft.network.play.server.SSpawnParticlePacket;
+import net.minecraft.network.play.server.SStopSoundPacket;
+import net.minecraft.network.play.server.STitlePacket;
+import net.minecraft.network.play.server.SUpdateHealthPacket;
+import net.minecraft.network.play.server.SWorldSpawnChangedPacket;
+import net.minecraft.server.MCUtil;
+import net.minecraft.server.management.WhitelistEntry;
+import net.minecraft.tileentity.SignTileEntity;
+import net.minecraft.util.ResourceLocation;
+import net.minecraft.util.Util;
+import net.minecraft.util.math.BlockPos;
+import net.minecraft.util.math.vector.Vector3d;
+import net.minecraft.util.text.ChatType;
+import net.minecraft.util.text.ITextComponent;
+import net.minecraft.util.text.StringTextComponent;
+import net.minecraft.world.GameType;
+import net.minecraft.world.server.ChunkManager;
+import net.minecraft.world.server.ServerWorld;
+import net.minecraft.world.storage.MapDecoration;
 import org.apache.commons.lang.NotImplementedException;
 import org.apache.commons.lang.Validate;
 import org.bukkit.BanList;
@@ -81,48 +126,6 @@ import org.bukkit.plugin.messaging.StandardMessenger;
 import org.bukkit.scoreboard.Scoreboard;
 
 import net.md_5.bungee.api.chat.BaseComponent; // Spigot
-import net.minecraft.advancements.AdvancementProgress;
-import net.minecraft.advancements.PlayerAdvancements;
-import net.minecraft.entity.Entity;
-import net.minecraft.entity.LivingEntity;
-import net.minecraft.entity.ai.attributes.AttributeModifierManager;
-import net.minecraft.entity.ai.attributes.Attributes;
-import net.minecraft.entity.ai.attributes.ModifiableAttributeInstance;
-import net.minecraft.entity.player.PlayerEntity;
-import net.minecraft.entity.player.ServerPlayerEntity;
-import net.minecraft.inventory.container.Container;
-import net.minecraft.nbt.CompoundNBT;
-import net.minecraft.network.PacketBuffer;
-import net.minecraft.network.play.ServerPlayNetHandler;
-import net.minecraft.network.play.server.SChangeBlockPacket;
-import net.minecraft.network.play.server.SChatPacket;
-import net.minecraft.network.play.server.SCustomPayloadPlayPacket;
-import net.minecraft.network.play.server.SEntityPropertiesPacket;
-import net.minecraft.network.play.server.SMapDataPacket;
-import net.minecraft.network.play.server.SPlaySoundEffectPacket;
-import net.minecraft.network.play.server.SPlaySoundEventPacket;
-import net.minecraft.network.play.server.SPlaySoundPacket;
-import net.minecraft.network.play.server.SPlayerListHeaderFooterPacket;
-import net.minecraft.network.play.server.SPlayerListItemPacket;
-import net.minecraft.network.play.server.SSetExperiencePacket;
-import net.minecraft.network.play.server.SSpawnParticlePacket;
-import net.minecraft.network.play.server.SStopSoundPacket;
-import net.minecraft.network.play.server.STitlePacket;
-import net.minecraft.network.play.server.SUpdateHealthPacket;
-import net.minecraft.network.play.server.SWorldSpawnChangedPacket;
-import net.minecraft.server.management.WhitelistEntry;
-import net.minecraft.tileentity.SignTileEntity;
-import net.minecraft.util.ResourceLocation;
-import net.minecraft.util.Util;
-import net.minecraft.util.math.BlockPos;
-import net.minecraft.util.math.vector.Vector3d;
-import net.minecraft.util.text.ChatType;
-import net.minecraft.util.text.ITextComponent;
-import net.minecraft.util.text.StringTextComponent;
-import net.minecraft.world.GameType;
-import net.minecraft.world.server.ChunkManager;
-import net.minecraft.world.server.ServerWorld;
-import net.minecraft.world.storage.MapDecoration;
 
 @DelegateDeserialization(CraftOfflinePlayer.class)
 public class CraftPlayer extends CraftHumanEntity implements Player {
@@ -1236,8 +1239,13 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         hiddenPlayers.put(player.getUniqueId(), hidingPlugins);
 
         // Remove this player from the hidden player's EntityTrackerEntry
-        ChunkManager tracker = ((ServerWorld) entity.field_70170_p).E().field_217237_a;
+        // Paper start
         ServerPlayerEntity other = ((CraftPlayer) player).getHandle();
+        unregisterPlayer(other);
+    }
+    private void unregisterPlayer(ServerPlayerEntity other) {
+        ChunkManager tracker = ((ServerWorld) entity.field_70170_p).E().field_217237_a;
+        // Paper end
         ChunkManager.EntityTracker entry = tracker.field_219272_z.get(other.func_145782_y());
         if (entry != null) {
             entry.func_219399_a(getHandle());
@@ -1278,8 +1286,13 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         }
         hiddenPlayers.remove(player.getUniqueId());
 
-        ChunkManager tracker = ((ServerWorld) entity.field_70170_p).E().field_217237_a;
+        // Paper start
         ServerPlayerEntity other = ((CraftPlayer) player).getHandle();
+        registerPlayer(other);
+    }
+    private void registerPlayer(ServerPlayerEntity other) {
+        ChunkManager tracker = ((ServerWorld) entity.field_70170_p).E().field_217237_a;
+        // Paper end
 
         getHandle().field_71135_a.func_147359_a(new SPlayerListItemPacket(SPlayerListItemPacket.Action.ADD_PLAYER, other));
 
@@ -1288,6 +1301,50 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
             entry.func_219400_b(getHandle());
         }
     }
+    // Paper start
+    private void reregisterPlayer(ServerPlayerEntity player) {
+        if (!hiddenPlayers.containsKey(player.func_110124_au())) {
+            unregisterPlayer(player);
+            registerPlayer(player);
+        }
+    }
+    public void setPlayerProfile(PlayerProfile profile) {
+        ServerPlayerEntity self = getHandle();
+        self.setProfile(CraftPlayerProfile.asAuthlibCopy(profile));
+        if (!self.sentListPacket) {
+            return;
+        }
+        List<ServerPlayerEntity> players = server.getServer().func_184103_al().field_72404_b;
+        for (ServerPlayerEntity player : players) {
+            player.getBukkitEntity().reregisterPlayer(self);
+        }
+        refreshPlayer();
+    }
+    public PlayerProfile getPlayerProfile() {
+        return new CraftPlayerProfile(this).clone();
+    }
+
+    private void refreshPlayer() {
+        ServerPlayerEntity handle = getHandle();
+
+        Location loc = getLocation();
+
+        ServerPlayNetHandler connection = handle.field_71135_a;
+        reregisterPlayer(handle);
+
+        //Respawn the player then update their position and selected slot
+        ServerWorld worldserver = handle.func_71121_q();
+        connection.func_147359_a(new net.minecraft.network.play.server.SRespawnPacket(worldserver.func_234922_V_(), worldserver.func_234923_W_(), net.minecraft.world.biome.BiomeManager.func_235200_a_(worldserver.func_72905_C()), handle.field_71134_c.func_73081_b(), handle.field_71134_c.func_241815_c_(), worldserver.func_234925_Z_(), worldserver.func_241109_A_(), true));
+        handle.func_71016_p();
+        connection.func_147359_a(new net.minecraft.network.play.server.SPlayerPositionLookPacket(loc.getX(), loc.getY(), loc.getZ(), loc.getYaw(), loc.getPitch(), new HashSet<>(), 0));
+        net.minecraft.server.MinecraftServer.getServer().func_184103_al().func_72385_f(handle);
+
+        if (this.isOp()) {
+            this.setOp(false);
+            this.setOp(true);
+        }
+    }
+    // Paper end
 
     public void removeDisconnectingPlayer(Player player) {
         hiddenPlayers.remove(player.getUniqueId());
