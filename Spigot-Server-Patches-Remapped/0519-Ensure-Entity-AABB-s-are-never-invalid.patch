From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sun, 10 May 2020 22:12:46 -0400
Subject: [PATCH] Ensure Entity AABB's are never invalid


diff --git a/src/main/java/net/minecraft/entity/Entity.java b/src/main/java/net/minecraft/entity/Entity.java
index e1e6addd9c761957c3ea6dd81a62c14c70e93e8b..fc85fad7b2900c88959084c7552e202201fb4864 100644
--- a/src/main/java/net/minecraft/entity/Entity.java
+++ b/src/main/java/net/minecraft/entity/Entity.java
@@ -1,22 +1,39 @@
 package net.minecraft.entity;
 
+import co.aikar.timings.MinecraftTimings;
+import co.aikar.timings.Timing;
 import com.google.common.collect.Iterables;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Sets;
 import it.unimi.dsi.fastutil.objects.Object2DoubleArrayMap;
 import it.unimi.dsi.fastutil.objects.Object2DoubleMap;
-import java.util.Arrays;
-import java.util.Collection;
-import java.util.Collections;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Locale;
-import java.util.Optional;
-import java.util.Random;
-import java.util.Set;
-import java.util.UUID;
-import java.util.concurrent.atomic.AtomicInteger;
-import java.util.stream.Stream;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+import org.bukkit.Bukkit;
+import org.bukkit.Server;
+import org.bukkit.block.BlockFace;
+import org.bukkit.command.CommandSender;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.craftbukkit.entity.CraftEntity;
+import org.bukkit.craftbukkit.entity.CraftPlayer;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.entity.Hanging;
+import org.bukkit.entity.LivingEntity;
+import org.bukkit.entity.Pose;
+import org.bukkit.entity.Vehicle;
+import org.bukkit.event.entity.EntityAirChangeEvent;
+import org.bukkit.event.entity.EntityCombustByEntityEvent;
+import org.bukkit.event.entity.EntityCombustEvent;
+import org.bukkit.event.entity.EntityDropItemEvent;
+import org.bukkit.event.entity.EntityPortalEvent;
+import org.bukkit.event.entity.EntityPoseChangeEvent;
+import org.bukkit.event.hanging.HangingBreakByEntityEvent;
+import org.bukkit.event.player.PlayerTeleportEvent;
+import org.bukkit.event.vehicle.VehicleBlockCollisionEvent;
+import org.bukkit.event.vehicle.VehicleEnterEvent;
+import org.bukkit.event.vehicle.VehicleExitEvent;
+import org.bukkit.plugin.PluginManager;
+
 import javax.annotation.Nullable;
 import net.minecraft.advancements.CriteriaTriggers;
 import net.minecraft.block.Block;
@@ -38,6 +55,7 @@ import net.minecraft.enchantment.EnchantmentHelper;
 import net.minecraft.enchantment.ProtectionEnchantment;
 import net.minecraft.entity.effect.LightningBoltEntity;
 import net.minecraft.entity.item.BoatEntity;
+import net.minecraft.entity.item.HangingEntity;
 import net.minecraft.entity.item.ItemEntity;
 import net.minecraft.entity.item.minecart.AbstractMinecartEntity;
 import net.minecraft.entity.passive.AnimalEntity;
@@ -112,36 +130,20 @@ import net.minecraft.world.gen.Heightmap;
 import net.minecraft.world.server.ChunkManager;
 import net.minecraft.world.server.ServerWorld;
 import net.minecraft.world.server.TicketType;
-import org.apache.logging.log4j.LogManager;
-import org.apache.logging.log4j.Logger;
+import java.util.Arrays;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Locale;
+import java.util.Optional;
+import java.util.Random;
+import java.util.Set;
+import java.util.UUID;
+import java.util.concurrent.atomic.AtomicInteger;
+import java.util.stream.Stream;
 
 // CraftBukkit start
-import org.bukkit.Bukkit;
-import org.bukkit.Server;
-import org.bukkit.block.BlockFace;
-import org.bukkit.command.CommandSender;
-import org.bukkit.entity.Hanging;
-import org.bukkit.entity.LivingEntity;
-import org.bukkit.entity.Vehicle;
-import co.aikar.timings.MinecraftTimings; // Paper
-import co.aikar.timings.Timing; // Paper
-import org.bukkit.event.entity.EntityCombustByEntityEvent;
-import org.bukkit.event.hanging.HangingBreakByEntityEvent;
-import org.bukkit.event.vehicle.VehicleBlockCollisionEvent;
-import org.bukkit.event.vehicle.VehicleEnterEvent;
-import org.bukkit.event.vehicle.VehicleExitEvent;
-import org.bukkit.craftbukkit.CraftWorld;
-import org.bukkit.craftbukkit.entity.CraftEntity;
-import org.bukkit.craftbukkit.entity.CraftPlayer;
-import org.bukkit.craftbukkit.event.CraftEventFactory;
-import org.bukkit.entity.Pose;
-import org.bukkit.event.entity.EntityAirChangeEvent;
-import org.bukkit.event.entity.EntityCombustEvent;
-import org.bukkit.event.entity.EntityDropItemEvent;
-import org.bukkit.event.entity.EntityPortalEvent;
-import org.bukkit.event.entity.EntityPoseChangeEvent;
-import org.bukkit.event.player.PlayerTeleportEvent;
-import org.bukkit.plugin.PluginManager;
 // CraftBukkit end
 
 public abstract class Entity implements INameable, ICommandSource, KeyedObject { // Paper
@@ -519,10 +521,12 @@ public abstract class Entity implements INameable, ICommandSource, KeyedObject {
 
     public void func_70107_b(double p_70107_1_, double p_70107_2_, double p_70107_3_) {
         this.func_226288_n_(p_70107_1_, p_70107_2_, p_70107_3_);
-        float f = this.field_213325_aI.field_220315_a / 2.0F;
-        float f1 = this.field_213325_aI.field_220316_b;
+        // Paper start - move into setPositionRaw
+        //float f = this.size.width / 2.0F;
+        //float f1 = this.size.height;
 
-        this.func_174826_a(new AxisAlignedBB(p_70107_1_ - (double) f, p_70107_2_, p_70107_3_ - (double) f, p_70107_1_ + (double) f, p_70107_2_ + (double) f1, p_70107_3_ + (double) f));
+        //this.a(new AxisAlignedBB(d0 - (double) f, d1, d2 - (double) f, d0 + (double) f, d1 + (double) f1, d2 + (double) f));
+        // Paper end
         if (valid) ((ServerWorld) field_70170_p).func_217464_b(this); // CraftBukkit
     }
 
@@ -3001,6 +3005,7 @@ public abstract class Entity implements INameable, ICommandSource, KeyedObject {
         return new AxisAlignedBB(vec3d, vec3d1);
     }
 
+    public final void setBoundingBox(AxisAlignedBB axisalignedbb) { func_174826_a(axisalignedbb); } // Paper - OBFHELPER
     public void func_174826_a(AxisAlignedBB p_174826_1_) {
         // CraftBukkit start - block invalid bounding boxes
         double minX = p_174826_1_.field_72340_a,
@@ -3439,6 +3444,14 @@ public abstract class Entity implements INameable, ICommandSource, KeyedObject {
     }
 
     public void func_226288_n_(double p_226288_1_, double p_226288_2_, double p_226288_3_) {
+        // Paper start - never allow AABB to become desynced from position
+        // hanging has its own special logic
+        if (!(this instanceof HangingEntity) && (this.field_233557_ao_.field_72450_a != p_226288_1_ || this.field_233557_ao_.field_72448_b != p_226288_2_ || this.field_233557_ao_.field_72449_c != p_226288_3_)) {
+            float f = this.field_213325_aI.field_220315_a / 2.0F;
+            float f1 = this.field_213325_aI.field_220316_b;
+            this.setBoundingBox(new AxisAlignedBB(p_226288_1_ - (double) f, p_226288_2_, p_226288_3_ - (double) f, p_226288_1_ + (double) f, p_226288_2_ + (double) f1, p_226288_3_ + (double) f));
+        }
+        // Paper end
         if (this.field_233557_ao_.field_72450_a != p_226288_1_ || this.field_233557_ao_.field_72448_b != p_226288_2_ || this.field_233557_ao_.field_72449_c != p_226288_3_) {
             this.field_233557_ao_ = new Vector3d(p_226288_1_, p_226288_2_, p_226288_3_);
             int i = MathHelper.func_76128_c(p_226288_1_);
