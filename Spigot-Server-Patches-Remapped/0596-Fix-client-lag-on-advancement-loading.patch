From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: jmp <jasonpenilla2@me.com>
Date: Sat, 31 Oct 2020 11:49:01 -0700
Subject: [PATCH] Fix client lag on advancement loading

When new advancements are added via the UnsafeValues#loadAdvancement
API, it triggers a full datapack reload when this is not necessary. The
advancement is already loaded directly into the advancement registry,
and the point of saving the advancement to the Bukkit datapack seems to
be for persistence. By removing the call to reload datapacks when an
advancement is loaded, the client no longer completely freezes up when
adding a new advancement.
To ensure the client still receives the updated advancement data, we
manually reload the advancement data for all players, which
normally takes place as a part of the datapack reloading.

diff --git a/src/main/java/net/minecraft/advancements/PlayerAdvancements.java b/src/main/java/net/minecraft/advancements/PlayerAdvancements.java
index 7fa7ff7ba1159125b2c0cbd8a1558b888b56ffbb..2f718e509906357eed6d308ac48ab1b1b729bba6 100644
--- a/src/main/java/net/minecraft/advancements/PlayerAdvancements.java
+++ b/src/main/java/net/minecraft/advancements/PlayerAdvancements.java
@@ -90,6 +90,7 @@ public class PlayerAdvancements {
 
     }
 
+    public final void reload(AdvancementManager advancementDataWorld) { this.func_240918_a_(advancementDataWorld); } // Paper - OBFHELPER
     public void func_240918_a_(AdvancementManager p_240918_1_) {
         this.func_192745_a();
         this.field_192758_f.clear();
@@ -386,6 +387,7 @@ public class PlayerAdvancements {
 
     }
 
+    public final void sendUpdateIfNeeded(ServerPlayerEntity entityPlayer) { this.func_192741_b(entityPlayer); } // Paper - OBFHELPER
     public void func_192741_b(ServerPlayerEntity p_192741_1_) {
         if (this.field_192763_k || !this.field_192760_h.isEmpty() || !this.field_192761_i.isEmpty()) {
             Map<ResourceLocation, AdvancementProgress> map = Maps.newHashMap();
diff --git a/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java b/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
index ed3a57f969fca1ae20510374b71bee40df869402..622fc06902608c43700e09877ac1c25d207e43c9 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
@@ -280,7 +280,13 @@ public final class CraftMagicNumbers implements UnsafeValues {
                     Bukkit.getLogger().log(Level.SEVERE, "Error saving advancement " + key, ex);
                 }
 
-                MinecraftServer.getServer().func_184103_al().func_193244_w();
+                // Paper start
+                //MinecraftServer.getServer().getPlayerList().reload();
+                MinecraftServer.getServer().func_184103_al().func_181057_v().forEach(player -> {
+                    player.func_192039_O().reload(MinecraftServer.getServer().func_191949_aK());
+                    player.func_192039_O().sendUpdateIfNeeded(player);
+                });
+                // Paper end
 
                 return bukkit;
             }
