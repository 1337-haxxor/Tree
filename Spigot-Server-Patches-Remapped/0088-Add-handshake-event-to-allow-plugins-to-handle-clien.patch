From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: kashike <kashike@vq.lc>
Date: Wed, 13 Apr 2016 20:21:38 -0700
Subject: [PATCH] Add handshake event to allow plugins to handle client
 handshaking logic themselves


diff --git a/src/main/java/net/minecraft/network/handshake/ServerHandshakeNetHandler.java b/src/main/java/net/minecraft/network/handshake/ServerHandshakeNetHandler.java
index 9c315b5a99fc261768f92185506e2a4cec56b95d..b20b7bd8e45e9d48a1112594dd2011f071994830 100644
--- a/src/main/java/net/minecraft/network/handshake/ServerHandshakeNetHandler.java
+++ b/src/main/java/net/minecraft/network/handshake/ServerHandshakeNetHandler.java
@@ -25,7 +25,7 @@ public class ServerHandshakeNetHandler implements IHandshakeNetHandler {
     // CraftBukkit end
     private static final ITextComponent field_241169_a_ = new StringTextComponent("Ignoring status request");
     private final MinecraftServer field_147387_a;
-    private final NetworkManager field_147386_b;
+    private final NetworkManager field_147386_b; final NetworkManager getNetworkManager() { return this.field_147386_b; } // Paper - OBFHELPER
 
     public ServerHandshakeNetHandler(MinecraftServer minecraftserver, NetworkManager networkmanager) {
         this.field_147387_a = minecraftserver;
@@ -84,8 +84,33 @@ public class ServerHandshakeNetHandler implements IHandshakeNetHandler {
                     this.field_147386_b.func_150718_a(chatmessage);
                 } else {
                     this.field_147386_b.func_150719_a(new ServerLoginNetHandler(this.field_147387_a, this.field_147386_b));
+                // Paper start - handshake event
+                boolean proxyLogicEnabled = org.spigotmc.SpigotConfig.bungee;
+                boolean handledByEvent = false;
+                // Try and handle the handshake through the event
+                if (com.destroystokyo.paper.event.player.PlayerHandshakeEvent.getHandlerList().getRegisteredListeners().length != 0) { // Hello? Can you hear me?
+                    com.destroystokyo.paper.event.player.PlayerHandshakeEvent event = new com.destroystokyo.paper.event.player.PlayerHandshakeEvent(p_147383_1_.field_149598_b, !proxyLogicEnabled);
+                    if (event.callEvent()) {
+                        // If we've failed somehow, let the client know so and go no further.
+                        if (event.isFailed()) {
+                            chatmessage = new TranslationTextComponent(event.getFailMessage());
+                            this.getNetworkManager().func_179290_a(new SDisconnectLoginPacket(chatmessage));
+                            this.getNetworkManager().func_150718_a(chatmessage);
+                            return;
+                        }
+
+                        p_147383_1_.field_149598_b = event.getServerHostname();
+                        this.getNetworkManager().field_150743_l = new java.net.InetSocketAddress(event.getSocketAddressHostname(), ((java.net.InetSocketAddress) this.getNetworkManager().func_74430_c()).getPort());
+                        this.getNetworkManager().spoofedUUID = event.getUniqueId();
+                        this.getNetworkManager().spoofedProfile = gson.fromJson(event.getPropertiesJson(), com.mojang.authlib.properties.Property[].class);
+                        handledByEvent = true; // Hooray, we did it!
+                    }
+                }
+                // Don't try and handle default logic if it's been handled by the event.
+                if (!handledByEvent && proxyLogicEnabled) {
+                // Paper end
                     // Spigot Start
-                    if (org.spigotmc.SpigotConfig.bungee) {
+                //if (org.spigotmc.SpigotConfig.bungee) { // Paper - comment out, we check above!
                         String[] split = p_147383_1_.field_149598_b.split("\00");
                         if ( split.length == 3 || split.length == 4 ) {
                             p_147383_1_.field_149598_b = split[0];
