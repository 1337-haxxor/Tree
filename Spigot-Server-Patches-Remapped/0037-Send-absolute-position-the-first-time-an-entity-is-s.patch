From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Wed, 2 Mar 2016 23:13:07 -0600
Subject: [PATCH] Send absolute position the first time an entity is seen


diff --git a/src/main/java/net/minecraft/world/TrackedEntity.java b/src/main/java/net/minecraft/world/TrackedEntity.java
index 88052770febd62f5e61767ec4a8bd5f1fa02ff20..4236d6bd6685f0f60009d7c8a8ea5fdc6d458fc2 100644
--- a/src/main/java/net/minecraft/world/TrackedEntity.java
+++ b/src/main/java/net/minecraft/world/TrackedEntity.java
@@ -4,6 +4,7 @@ import com.google.common.collect.Lists;
 import com.mojang.datafixers.util.Pair;
 import java.util.Collection;
 import java.util.Collections;
+import java.util.HashSet;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Set;
@@ -53,7 +54,7 @@ public class TrackedEntity {
     private final Entity field_219461_c;
     private final int field_219462_d;
     private final boolean field_219463_e;
-    private final Consumer<IPacket<?>> field_219464_f;
+    private final Consumer<IPacket<?>> field_219464_f; private Consumer<IPacket<?>> getPacketConsumer() { return field_219464_f; } // Paper - OBFHELPER
     private long field_219465_g;
     private long field_219466_h;
     private long field_219467_i;
@@ -68,8 +69,23 @@ public class TrackedEntity {
     private boolean field_219476_r;
     // CraftBukkit start
     private final Set<ServerPlayerEntity> trackedPlayers;
+    // Paper start
+    private java.util.Map<ServerPlayerEntity, Boolean> trackedPlayerMap = null;
+
+    /**
+     * Requested in https://github.com/PaperMC/Paper/issues/1537 to allow intercepting packets
+     */
+    public void sendPlayerPacket(ServerPlayerEntity player, IPacket packet) {
+        player.field_71135_a.func_147359_a(packet);
+    }
+
+    public TrackedEntity(ServerWorld worldserver, Entity entity, int i, boolean flag, Consumer<IPacket<?>> consumer, java.util.Map<ServerPlayerEntity, Boolean> trackedPlayers) {
+        this(worldserver, entity, i, flag, consumer, trackedPlayers.keySet());
+        trackedPlayerMap = trackedPlayers;
+    }
 
     public TrackedEntity(ServerWorld worldserver, Entity entity, int i, boolean flag, Consumer<IPacket<?>> consumer, Set<ServerPlayerEntity> trackedPlayers) {
+        // Paper end
         this.trackedPlayers = trackedPlayers;
         // CraftBukkit end
         this.field_219471_m = Vector3d.field_186680_a;
@@ -191,7 +207,25 @@ public class TrackedEntity {
                 }
 
                 if (packet1 != null) {
-                    this.field_219464_f.accept(packet1);
+                    // paper start
+                    if (trackedPlayerMap == null || packet1 instanceof SEntityTeleportPacket) {
+                        this.field_219464_f.accept((packet1));
+                    } else {
+                        SEntityTeleportPacket teleportPacket = null;
+
+                        for (java.util.Map.Entry<ServerPlayerEntity, Boolean> viewer : trackedPlayerMap.entrySet()) {
+                            if (viewer.getValue()) {
+                                viewer.setValue(false);
+                                if (teleportPacket == null) {
+                                    teleportPacket = new SEntityTeleportPacket(this.field_219461_c);
+                                }
+                                sendPlayerPacket(viewer.getKey(), teleportPacket);
+                            } else {
+                                sendPlayerPacket(viewer.getKey(), packet1);
+                            }
+                        }
+                    }
+                    // Paper end
                 }
 
                 this.func_219457_c();
diff --git a/src/main/java/net/minecraft/world/server/ChunkManager.java b/src/main/java/net/minecraft/world/server/ChunkManager.java
index 4c9343d70b9487617ae5ac90292a15e7d18780ec..77b579ac55c8b33ebb47eddc833ebafc60c31aa0 100644
--- a/src/main/java/net/minecraft/world/server/ChunkManager.java
+++ b/src/main/java/net/minecraft/world/server/ChunkManager.java
@@ -1299,10 +1299,14 @@ public class ChunkManager extends ChunkLoader implements ChunkHolder.IPlayerProv
         private final Entity field_219403_c;
         private final int field_219404_d;
         private SectionPos field_219405_e;
-        public final Set<ServerPlayerEntity> field_219406_f = Sets.newHashSet();
+        // Paper start
+        // Replace trackedPlayers Set with a Map. The value is true until the player receives
+        // their first update (which is forced to have absolute coordinates), false afterward.
+        public java.util.Map<ServerPlayerEntity, Boolean> trackedPlayerMap = new java.util.HashMap<>();
+        public Set<ServerPlayerEntity> field_219406_f = trackedPlayerMap.keySet();
 
         public EntityTracker(Entity entity, int i, int j, boolean flag) {
-            this.field_219402_b = new TrackedEntity(ChunkManager.this.field_219255_i, entity, j, flag, this::func_219391_a, field_219406_f); // CraftBukkit
+            this.field_219402_b = new TrackedEntity(ChunkManager.this.field_219255_i, entity, j, flag, this::func_219391_a, trackedPlayerMap); // CraftBukkit // Paper
             this.field_219403_c = entity;
             this.field_219404_d = i;
             this.field_219405_e = SectionPos.func_218157_a(entity);
@@ -1384,7 +1388,7 @@ public class ChunkManager extends ChunkLoader implements ChunkHolder.IPlayerProv
                     p_219400_1_.field_71130_g.remove(Integer.valueOf(this.field_219403_c.func_145782_y()));
                     // CraftBukkit end
 
-                    if (flag1 && this.field_219406_f.add(p_219400_1_)) {
+                    if (flag1 && this.trackedPlayerMap.putIfAbsent(p_219400_1_, true) == null) { // Paper
                         this.field_219402_b.func_219455_b(p_219400_1_);
                     }
                 } else if (this.field_219406_f.remove(p_219400_1_)) {
