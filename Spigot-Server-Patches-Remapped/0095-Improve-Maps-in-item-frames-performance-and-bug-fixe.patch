From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Fri, 29 Apr 2016 20:02:00 -0400
Subject: [PATCH] Improve Maps (in item frames) performance and bug fixes

Maps used a modified version of rendering to support plugin controlled
imaging on maps. The Craft Map Renderer is much slower than Vanilla,
causing maps in item frames to cause a noticeable hit on server performance.

This updates the map system to not use the Craft system if we detect that no
custom renderers are in use, defaulting to the much simpler Vanilla system.

Additionally, numerous issues to player position tracking on maps has been fixed.

diff --git a/src/main/java/net/minecraft/entity/player/PlayerEntity.java b/src/main/java/net/minecraft/entity/player/PlayerEntity.java
index 0afaf968d562900ea4d03e6013e0afeb060ca8d8..17afa9513153b1feadb318a1b3b50e9cf296da30 100644
--- a/src/main/java/net/minecraft/entity/player/PlayerEntity.java
+++ b/src/main/java/net/minecraft/entity/player/PlayerEntity.java
@@ -51,6 +51,7 @@ import net.minecraft.inventory.container.PlayerContainer;
 import net.minecraft.item.ArmorItem;
 import net.minecraft.item.AxeItem;
 import net.minecraft.item.ElytraItem;
+import net.minecraft.item.FilledMapItem;
 import net.minecraft.item.ItemStack;
 import net.minecraft.item.Items;
 import net.minecraft.item.MerchantOffers;
@@ -107,6 +108,7 @@ import net.minecraft.world.GameType;
 import net.minecraft.world.IWorldReader;
 import net.minecraft.world.World;
 import net.minecraft.world.server.ServerWorld;
+import net.minecraft.world.storage.MapData;
 // CraftBukkit start
 import org.bukkit.craftbukkit.entity.CraftHumanEntity;
 import org.bukkit.craftbukkit.util.CraftVector;
@@ -686,6 +688,12 @@ public abstract class PlayerEntity extends LivingEntity {
                 return null;
             }
             // CraftBukkit end
+            // Paper start - remove player from map on drop
+            if (p_146097_1_.func_77973_b() == Items.field_151098_aY) {
+                MapData worldmap = FilledMapItem.func_195950_a(p_146097_1_, this.field_70170_p);
+                worldmap.updateSeenPlayers(this, p_146097_1_);
+            }
+            // Paper end
 
             return entityitem;
         }
diff --git a/src/main/java/net/minecraft/world/server/ServerWorld.java b/src/main/java/net/minecraft/world/server/ServerWorld.java
index 53a7e133838e5830eb611d8463a7c56956939b00..5f5eace8e56779b7dcdaf4af5d2e9590c1c11462 100644
--- a/src/main/java/net/minecraft/world/server/ServerWorld.java
+++ b/src/main/java/net/minecraft/world/server/ServerWorld.java
@@ -1113,6 +1113,7 @@ public class ServerWorld extends World implements ISeedReader {
                         {
                             if ( iter.next().field_76211_a == p_217484_1_ )
                             {
+                                map.field_76203_h.remove(p_217484_1_.func_200200_C_().getString()); // Paper
                                 iter.remove();
                             }
                         }
diff --git a/src/main/java/net/minecraft/world/storage/MapData.java b/src/main/java/net/minecraft/world/storage/MapData.java
index 00156e66b08fa9c4720b15a359ac6d6593f57c12..b268c5d88a46024e4ab22ea7221953911adf9946 100644
--- a/src/main/java/net/minecraft/world/storage/MapData.java
+++ b/src/main/java/net/minecraft/world/storage/MapData.java
@@ -55,6 +55,7 @@ public class MapData extends WorldSavedData {
     private final Map<String, MapBanner> field_204270_k = Maps.newHashMap();
     public final Map<String, MapDecoration> field_76203_h = Maps.newLinkedHashMap();
     private final Map<String, MapFrame> field_212442_l = Maps.newHashMap();
+    private org.bukkit.craftbukkit.map.RenderData vanillaRender = new org.bukkit.craftbukkit.map.RenderData(); // Paper
 
     // CraftBukkit start
     public final CraftMapView mapView;
@@ -67,6 +68,7 @@ public class MapData extends WorldSavedData {
         // CraftBukkit start
         mapView = new CraftMapView(this);
         server = (CraftServer) org.bukkit.Bukkit.getServer();
+        vanillaRender.buffer = field_76198_e; // Paper
         // CraftBukkit end
     }
 
@@ -134,6 +136,7 @@ public class MapData extends WorldSavedData {
             this.field_204270_k.put(mapiconbanner.func_204299_f(), mapiconbanner);
             this.func_191095_a(mapiconbanner.func_204305_c(), (IWorld) null, mapiconbanner.func_204299_f(), (double) mapiconbanner.func_204304_a().func_177958_n(), (double) mapiconbanner.func_204304_a().func_177952_p(), 180.0D, mapiconbanner.func_204302_d());
         }
+        this.vanillaRender.buffer = field_76198_e; // Paper
 
         ListNBT nbttaglist1 = p_76184_1_.func_150295_c("frames", 10);
 
@@ -214,6 +217,7 @@ public class MapData extends WorldSavedData {
         this.func_76185_a();
     }
 
+    public void updateSeenPlayers(PlayerEntity entityhuman, ItemStack itemstack) { this.func_76191_a(entityhuman, itemstack); } // Paper - OBFHELPER
     public void func_76191_a(PlayerEntity p_76191_1_, ItemStack p_76191_2_) {
         if (!this.field_76202_j.containsKey(p_76191_1_)) {
             MapData.MapInfo worldmap_worldmaphumantracker = new MapData.MapInfo(p_76191_1_);
@@ -449,6 +453,21 @@ public class MapData extends WorldSavedData {
 
     public class MapInfo {
 
+        // Paper start
+        private void addSeenPlayers(java.util.Collection<MapDecoration> icons) {
+            org.bukkit.entity.Player player = (org.bukkit.entity.Player) field_76211_a.getBukkitEntity();
+            MapData.this.field_76203_h.forEach((name, mapIcon) -> {
+                // If this cursor is for a player check visibility with vanish system
+                org.bukkit.entity.Player other = org.bukkit.Bukkit.getPlayerExact(name); // Spigot
+                if (other == null || player.canSee(other)) {
+                    icons.add(mapIcon);
+                }
+            });
+        }
+        private boolean shouldUseVanillaMap() {
+            return mapView.getRenderers().size() == 1 && mapView.getRenderers().get(0).getClass() == org.bukkit.craftbukkit.map.CraftMapRenderer.class;
+        }
+        // Paper end
         public final PlayerEntity field_76211_a;
         private boolean field_176105_d = true;
         private int field_176106_e;
@@ -465,9 +484,12 @@ public class MapData extends WorldSavedData {
         @Nullable
         public IPacket<?> func_176101_a(ItemStack p_176101_1_) {
             // CraftBukkit start
-            org.bukkit.craftbukkit.map.RenderData render = MapData.this.mapView.render((org.bukkit.craftbukkit.entity.CraftPlayer) this.field_76211_a.getBukkitEntity()); // CraftBukkit
+            if (!this.field_176105_d && this.field_176109_i % 5 != 0) { this.field_176109_i++; return null; } // Paper - this won't end up sending, so don't render it!
+            boolean vanillaMaps = shouldUseVanillaMap(); // Paper
+            org.bukkit.craftbukkit.map.RenderData render = !vanillaMaps ? MapData.this.mapView.render((org.bukkit.craftbukkit.entity.CraftPlayer) this.field_76211_a.getBukkitEntity()) : MapData.this.vanillaRender; // CraftBukkit // Paper
 
             java.util.Collection<MapDecoration> icons = new java.util.ArrayList<MapDecoration>();
+            if (vanillaMaps) addSeenPlayers(icons); // Paper
 
             for ( org.bukkit.map.MapCursor cursor : render.cursors) {
 
diff --git a/src/main/java/org/bukkit/craftbukkit/map/RenderData.java b/src/main/java/org/bukkit/craftbukkit/map/RenderData.java
index 256a131781721c86dd6cdbc329335964570cbe8c..5768cd512ec166f1e8d1f4a28792015347297c3f 100644
--- a/src/main/java/org/bukkit/craftbukkit/map/RenderData.java
+++ b/src/main/java/org/bukkit/craftbukkit/map/RenderData.java
@@ -5,7 +5,7 @@ import org.bukkit.map.MapCursor;
 
 public class RenderData {
 
-    public final byte[] buffer;
+    public byte[] buffer; // Paper
     public final ArrayList<MapCursor> cursors;
 
     public RenderData() {
