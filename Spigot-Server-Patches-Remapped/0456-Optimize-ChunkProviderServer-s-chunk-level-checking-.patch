From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Spottedleaf <Spottedleaf@users.noreply.github.com>
Date: Thu, 16 Apr 2020 16:13:59 -0700
Subject: [PATCH] Optimize ChunkProviderServer's chunk level checking helper
 methods

These can be hot functions (i.e entity ticking and block ticking),
so inline where possible, and avoid the abstraction of the
Either class.

diff --git a/src/main/java/net/minecraft/world/server/ServerChunkProvider.java b/src/main/java/net/minecraft/world/server/ServerChunkProvider.java
index 89937595c8d5499f62735c76779e10f21d9bcd63..aa4d41a9762dd9e5ef39cbab30e2a0b8060cd4e5 100644
--- a/src/main/java/net/minecraft/world/server/ServerChunkProvider.java
+++ b/src/main/java/net/minecraft/world/server/ServerChunkProvider.java
@@ -27,7 +27,6 @@ import net.minecraft.util.Util;
 import net.minecraft.util.concurrent.ThreadTaskExecutor;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.ChunkPos;
-import net.minecraft.util.math.MathHelper;
 import net.minecraft.util.math.SectionPos;
 import net.minecraft.village.PointOfInterestManager;
 import net.minecraft.world.GameRules;
@@ -647,21 +646,29 @@ public class ServerChunkProvider extends AbstractChunkProvider {
 
     public final boolean isInEntityTickingChunk(Entity entity) { return this.func_217204_a(entity); } // Paper - OBFHELPER
     @Override public boolean func_217204_a(Entity p_217204_1_) {
-        long i = ChunkPos.func_77272_a(MathHelper.func_76128_c(p_217204_1_.func_226277_ct_()) >> 4, MathHelper.func_76128_c(p_217204_1_.func_226281_cx_()) >> 4);
-
-        return this.func_222872_a(i, (Function<ChunkHolder, CompletableFuture<Either<Chunk, ChunkHolder.IChunkLoadingError>>>) ChunkHolder::func_219297_b); // CraftBukkit - decompile error
+        // Paper start - optimize is ticking ready type functions
+        // entity ticking
+        ChunkHolder playerChunk = this.func_217213_a(MCUtil.getCoordinateKey(p_217204_1_));
+        return playerChunk != null && playerChunk.isEntityTickingReady();
+        // Paper end - optimize is ticking ready type functions
     }
 
     public final boolean isEntityTickingChunk(ChunkPos chunkcoordintpair) { return this.func_222865_a(chunkcoordintpair); } // Paper - OBFHELPER
     @Override public boolean func_222865_a(ChunkPos p_222865_1_) {
-        return this.func_222872_a(p_222865_1_.func_201841_a(), (Function<ChunkHolder, CompletableFuture<Either<Chunk, ChunkHolder.IChunkLoadingError>>>) ChunkHolder::func_219297_b); // CraftBukkit - decompile error
+        // Paper start - optimize is ticking ready type functions
+        // is entity ticking ready
+        ChunkHolder playerChunk = this.func_217213_a(MCUtil.getCoordinateKey(p_222865_1_));
+        return playerChunk != null && playerChunk.isEntityTickingReady();
+        // Paper end - optimize is ticking ready type functions
     }
 
     @Override
     public boolean func_222866_a(BlockPos p_222866_1_) {
-        long i = ChunkPos.func_77272_a(p_222866_1_.func_177958_n() >> 4, p_222866_1_.func_177952_p() >> 4);
-
-        return this.func_222872_a(i, (Function<ChunkHolder, CompletableFuture<Either<Chunk, ChunkHolder.IChunkLoadingError>>>) ChunkHolder::func_219296_a); // CraftBukkit - decompile error
+        // Paper start - optimize is ticking ready type functions
+        // is ticking ready
+        ChunkHolder playerChunk = this.func_217213_a(MCUtil.getCoordinateKey(p_222866_1_));
+        return playerChunk != null && playerChunk.isTickingReady();
+        // Paper end - optimize is ticking ready type functions
     }
 
     private boolean func_222872_a(long p_222872_1_, Function<ChunkHolder, CompletableFuture<Either<Chunk, ChunkHolder.IChunkLoadingError>>> p_222872_2_) {
