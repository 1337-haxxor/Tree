From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Wed, 27 Feb 2019 22:18:40 -0500
Subject: [PATCH] Limit Client Sign length more

modified clients can send more data from the client
to the server and it would get stored on the sign as sent.

Mojang has a limit of 384 which is much higher than reasonable.

the client can barely render around 16 characters as-is, but formatting
codes can get it to be more than 16 actual length.

Set a limit of 80 which should give an average of 16 characters 2
sets of legacy formatting codes which should be plenty for all uses.

This does not strip any existing data from the NBT as plugins
may use this for storing data out of the rendered area.

it only impacts data sent from the client.

Set -DPaper.maxSignLength=XX to change limit or -1 to disable

diff --git a/src/main/java/net/minecraft/network/play/ServerPlayNetHandler.java b/src/main/java/net/minecraft/network/play/ServerPlayNetHandler.java
index 423f136322302260f37cd91e4288310040805e10..528077ae0264514e3de82f2bf4838cb377c3b9ed 100644
--- a/src/main/java/net/minecraft/network/play/ServerPlayNetHandler.java
+++ b/src/main/java/net/minecraft/network/play/ServerPlayNetHandler.java
@@ -254,6 +254,7 @@ public class ServerPlayNetHandler implements IServerPlayNetHandler {
     private int field_184346_E;
     private int field_184347_F;
     private int field_184348_G;
+    private static final int MAX_SIGN_LINE_LENGTH = Integer.getInteger("Paper.maxSignLength", 80);
     private static final long KEEPALIVE_LIMIT = Long.getLong("paper.playerconnection.keepalive", 30) * 1000; // Paper - provide property to set keepalive limit
 
     public ServerPlayNetHandler(MinecraftServer minecraftserver, NetworkManager networkmanager, ServerPlayerEntity entityplayer) {
@@ -2842,7 +2843,17 @@ public class ServerPlayNetHandler implements IServerPlayNetHandler {
             String[] lines = new String[4];
 
             for (int i = 0; i < p_244542_2_.size(); ++i) {
-                lines[i] = SharedConstants.filterAllowedChatCharacters(p_244542_2_.get(i)); // Paper - Replaced with anvil color stripping method to stop exploits that allow colored signs to be created.
+                // Paper start - cap line length - modified clients can send longer data than normal
+                String currentLine = p_244542_2_.get(i);
+                if (MAX_SIGN_LINE_LENGTH > 0 && currentLine.length() > MAX_SIGN_LINE_LENGTH) {
+                    // This handles multibyte characters as 1
+                    int offset = currentLine.codePoints().limit(MAX_SIGN_LINE_LENGTH).map(Character::charCount).sum();
+                    if (offset < currentLine.length()) {
+                        p_244542_2_.set(i, currentLine = currentLine.substring(0, offset));
+                    }
+                }
+                // Paper end
+                lines[i] = SharedConstants.filterAllowedChatCharacters(currentLine); // Paper - Replaced with anvil color stripping method to stop exploits that allow colored signs to be created.
             }
             SignChangeEvent event = new SignChangeEvent((org.bukkit.craftbukkit.block.CraftBlock) player.getWorld().getBlockAt(x, y, z), this.server.getPlayer(this.field_147369_b), lines);
             this.server.getPluginManager().callEvent(event);
