From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sun, 9 Aug 2020 08:59:25 +0300
Subject: [PATCH] Incremental player saving


diff --git a/src/main/java/com/destroystokyo/paper/PaperConfig.java b/src/main/java/com/destroystokyo/paper/PaperConfig.java
index 56e4359ba32339e1bef58061585ff3e12e4215f3..60f03502a7fd622d2de3b2da9fe8014b289f3d31 100644
--- a/src/main/java/com/destroystokyo/paper/PaperConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperConfig.java
@@ -435,4 +435,15 @@ public class PaperConfig {
         allowPistonDuplication = getBoolean("settings.unsupported-settings.allow-piston-duplication", config.getBoolean("settings.unsupported-settings.allow-tnt-duplication", false));
         set("settings.unsupported-settings.allow-tnt-duplication", null);
     }
+
+    public static int playerAutoSaveRate = -1;
+    public static int maxPlayerAutoSavePerTick = 10;
+    private static void playerAutoSaveRate() {
+        playerAutoSaveRate = getInt("settings.player-auto-save-rate", -1);
+        maxPlayerAutoSavePerTick = getInt("settings.max-player-auto-save-per-tick", -1);
+        if (maxPlayerAutoSavePerTick == -1) { // -1 Automatic / "Recommended"
+            // 10 should be safe for everyone unless you mass spamming player auto save
+            maxPlayerAutoSavePerTick = (playerAutoSaveRate == -1 || playerAutoSaveRate > 100) ? 10 : 20;
+        }
+    }
 }
diff --git a/src/main/java/net/minecraft/entity/player/ServerPlayerEntity.java b/src/main/java/net/minecraft/entity/player/ServerPlayerEntity.java
index def0060dbd1c2db495d3e5a6cc0f4a242687d82c..9d56484559dc2c0881e89caed0b5316328f1cda8 100644
--- a/src/main/java/net/minecraft/entity/player/ServerPlayerEntity.java
+++ b/src/main/java/net/minecraft/entity/player/ServerPlayerEntity.java
@@ -167,6 +167,7 @@ import org.bukkit.inventory.MainHand;
 public class ServerPlayerEntity extends PlayerEntity implements IContainerListener {
 
     private static final Logger field_147102_bM = LogManager.getLogger();
+    public long lastSave = MinecraftServer.currentTick; // Paper
     public ServerPlayNetHandler field_71135_a;
     public NetworkManager networkManager; // Paper
     public final MinecraftServer field_71133_b;
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 0f2a8e905a50a00f95e4e30cbcb1a905ea193c23..36da919a9cf929886c15e43011f3208a94e365c1 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -1334,9 +1334,15 @@ public abstract class MinecraftServer extends RecursiveEventLoop<TickDelayedTask
         //if (autosavePeriod > 0 && this.ticks % autosavePeriod == 0) { // CraftBukkit // Paper - move down
             //MinecraftServer.LOGGER.debug("Autosave started"); // Paper
             serverAutoSave = (autosavePeriod > 0 && this.field_71315_w % autosavePeriod == 0); // Paper
+            // Paper start
+            int playerSaveInterval = com.destroystokyo.paper.PaperConfig.playerAutoSaveRate;
+            if (playerSaveInterval < 0) {
+                playerSaveInterval = autosavePeriod;
+            }
+            // Paper end
             this.field_71304_b.func_76320_a("save");
-            if (autosavePeriod > 0 && this.field_71315_w % autosavePeriod == 0) { // Paper
-            this.field_71318_t.func_72389_g();
+            if (playerSaveInterval > 0) { // Paper
+            this.field_71318_t.savePlayers(playerSaveInterval); // Paper
             }// Paper
             // Paper start
             for (ServerWorld world : func_212370_w()) {
diff --git a/src/main/java/net/minecraft/server/management/PlayerList.java b/src/main/java/net/minecraft/server/management/PlayerList.java
index c9ed8ca0c31d27baa317443c16c3fbf9b9fbf1ef..ba567a879a06417a68bf9458169fba6eb01fcfa5 100644
--- a/src/main/java/net/minecraft/server/management/PlayerList.java
+++ b/src/main/java/net/minecraft/server/management/PlayerList.java
@@ -555,6 +555,7 @@ public abstract class PlayerList {
     protected void func_72391_b(ServerPlayerEntity p_72391_1_) {
         if (!p_72391_1_.getBukkitEntity().isPersistent()) return; // CraftBukkit
         if (!p_72391_1_.didPlayerJoinEvent) return; // Paper - If we never fired PJE, we disconnected during login. Data has not changed, and additionally, our saved vehicle is not loaded! If we save now, we will lose our vehicle (CraftBukkit bug)
+        p_72391_1_.lastSave = MinecraftServer.currentTick; // Paper
         this.field_72412_k.func_237335_a_(p_72391_1_);
         ServerStatisticsManager serverstatisticmanager = (ServerStatisticsManager) p_72391_1_.func_147099_x(); // CraftBukkit
 
@@ -1200,10 +1201,21 @@ public abstract class PlayerList {
     }
 
     public void func_72389_g() {
+        // Paper start - incremental player saving
+        savePlayers(null);
+    }
+    public void savePlayers(Integer interval) {
         MCUtil.ensureMain("Save Players" , () -> { // Paper - Ensure main
         MinecraftTimings.savePlayers.startTiming(); // Paper
+        int numSaved = 0;
+        long now = MinecraftServer.currentTick;
         for (int i = 0; i < this.field_72404_b.size(); ++i) {
-            this.func_72391_b((ServerPlayerEntity) this.field_72404_b.get(i));
+            ServerPlayerEntity entityplayer = this.field_72404_b.get(i);
+            if (interval == null || now - entityplayer.lastSave >= interval) {
+                this.func_72391_b(entityplayer);
+                if (interval != null && ++numSaved <= com.destroystokyo.paper.PaperConfig.maxPlayerAutoSavePerTick) { break; }
+            }
+            // Paper end
         }
         MinecraftTimings.savePlayers.stopTiming(); // Paper
         return null; }); // Paper - ensure main
