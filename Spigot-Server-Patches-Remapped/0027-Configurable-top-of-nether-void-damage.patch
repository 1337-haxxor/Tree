From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Zach Brown <zach.brown@destroystokyo.com>
Date: Tue, 1 Mar 2016 23:58:50 -0600
Subject: [PATCH] Configurable top of nether void damage


diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
index d59b82b7bb1f6d1b231f4e394e0a67a3d154d7be..f7a0a33e49cadf9b2bd43f118c106937760da762 100644
--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
@@ -129,4 +129,19 @@ public class PaperWorldConfig {
         if (fallingBlockHeightNerf != 0) log("Falling Block Height Limit set to Y: " + fallingBlockHeightNerf);
         if (entityTNTHeightNerf != 0) log("TNT Entity Height Limit set to Y: " + entityTNTHeightNerf);
     }
+
+    public int netherVoidTopDamageHeight;
+    public boolean doNetherTopVoidDamage() { return netherVoidTopDamageHeight > 0; }
+    private void netherVoidTopDamageHeight() {
+        netherVoidTopDamageHeight = getInt("nether-ceiling-void-damage-height", 0);
+        log("Top of the nether void damage height: " + netherVoidTopDamageHeight);
+
+        if (PaperConfig.version < 18) {
+            boolean legacy = getBoolean("nether-ceiling-void-damage", false);
+            if (legacy) {
+                netherVoidTopDamageHeight = 128;
+                set("nether-ceiling-void-damage-height", netherVoidTopDamageHeight);
+            }
+        }
+    }
 }
diff --git a/src/main/java/net/minecraft/entity/Entity.java b/src/main/java/net/minecraft/entity/Entity.java
index d03c9749d4b4d20c9578307ac24cd848260ebb6c..5002e66f66cbe487d3d0bde91d8f2ee80830310c 100644
--- a/src/main/java/net/minecraft/entity/Entity.java
+++ b/src/main/java/net/minecraft/entity/Entity.java
@@ -509,9 +509,16 @@ public abstract class Entity implements INameable, ICommandSource, KeyedObject {
             this.field_70143_R *= 0.5F;
         }
 
-        if (this.func_226278_cu_() < -64.0D) {
-            this.func_70076_C();
+        // Paper start - Configurable nether ceiling damage
+
+        // Extracted to own function
+        /*
+        if (this.locY() < -64.0D) {
+            this.ai();
         }
+        */
+        this.performVoidDamage();
+        // Paper end
 
         if (!this.field_70170_p.field_72995_K) {
             this.func_70052_a(0, this.field_190534_ay > 0);
@@ -521,6 +528,17 @@ public abstract class Entity implements INameable, ICommandSource, KeyedObject {
         this.field_70170_p.func_217381_Z().func_76319_b();
     }
 
+    // Paper start
+    protected void performVoidDamage() {
+        if (this.func_226278_cu_() < -64.0D || (this.field_70170_p.getWorld().getEnvironment() == org.bukkit.World.Environment.NETHER
+            && field_70170_p.paperConfig.doNetherTopVoidDamage()
+            && this.func_226278_cu_() >= field_70170_p.paperConfig.netherVoidTopDamageHeight)) {
+
+            this.doVoidDamage();
+        }
+    }
+    // Paper end
+
     protected void func_184173_H() {
         if (this.field_71088_bW > 0) {
             --this.field_71088_bW;
@@ -596,6 +614,7 @@ public abstract class Entity implements INameable, ICommandSource, KeyedObject {
         this.func_241209_g_(0);
     }
 
+    protected final void doVoidDamage() { this.func_70076_C(); } // Paper - OBFHELPER
     protected void func_70076_C() {
         this.func_70106_y();
     }
diff --git a/src/main/java/net/minecraft/entity/item/minecart/AbstractMinecartEntity.java b/src/main/java/net/minecraft/entity/item/minecart/AbstractMinecartEntity.java
index ba74f4572b3a23bf8ab2d69c0d6d94acb6f5dfdd..9da74e0fafe428bb256b73e34acb3dd038f9a8df 100644
--- a/src/main/java/net/minecraft/entity/item/minecart/AbstractMinecartEntity.java
+++ b/src/main/java/net/minecraft/entity/item/minecart/AbstractMinecartEntity.java
@@ -322,9 +322,15 @@ public abstract class AbstractMinecartEntity extends Entity {
             this.func_70492_c(this.func_70491_i() - 1.0F);
         }
 
-        if (this.func_226278_cu_() < -64.0D) {
-            this.func_70076_C();
+        // Paper start - Configurable nether ceiling damage
+        // Extracted to own function
+        /*
+        if (this.locY() < -64.0D) {
+            this.ai();
         }
+        */
+        this.performVoidDamage();
+        // Paper end
 
         // this.doPortalTick(); // CraftBukkit - handled in postTick
         if (this.field_70170_p.field_72995_K) {
