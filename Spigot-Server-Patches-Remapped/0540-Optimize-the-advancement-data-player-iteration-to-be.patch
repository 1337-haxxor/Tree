From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Wyatt Childers <wchilders@nearce.com>
Date: Sat, 4 Jul 2020 23:07:43 -0400
Subject: [PATCH] Optimize the advancement data player iteration to be O(N)
 rather than O(N^2)


diff --git a/src/main/java/net/minecraft/advancements/PlayerAdvancements.java b/src/main/java/net/minecraft/advancements/PlayerAdvancements.java
index ea86ed9e872942acd382fbb839d82ad643da9297..03f6074159214705b7850e8ac867908c8b8739be 100644
--- a/src/main/java/net/minecraft/advancements/PlayerAdvancements.java
+++ b/src/main/java/net/minecraft/advancements/PlayerAdvancements.java
@@ -450,30 +450,48 @@ public class PlayerAdvancements {
     }
 
     private void func_192742_b(Advancement p_192742_1_) {
-        boolean flag = this.func_192738_c(p_192742_1_);
-        boolean flag1 = this.field_192759_g.contains(p_192742_1_);
+        // Paper start
+        e(p_192742_1_, net.minecraft.advancements.PlayerAdvancements.IterationEntryPoint.ROOT);
+    }
+    private enum IterationEntryPoint {
+        ROOT,
+        ITERATOR,
+        PARENT_OF_ITERATOR
+    }
+    private void e(Advancement advancement, net.minecraft.advancements.PlayerAdvancements.IterationEntryPoint entryPoint) {
+        // Paper end
+        boolean flag = this.func_192738_c(advancement);
+        boolean flag1 = this.field_192759_g.contains(advancement);
 
         if (flag && !flag1) {
-            this.field_192759_g.add(p_192742_1_);
-            this.field_192760_h.add(p_192742_1_);
-            if (this.field_192758_f.containsKey(p_192742_1_)) {
-                this.field_192761_i.add(p_192742_1_);
+            this.field_192759_g.add(advancement);
+            this.field_192760_h.add(advancement);
+            if (this.field_192758_f.containsKey(advancement)) {
+                this.field_192761_i.add(advancement);
             }
         } else if (!flag && flag1) {
-            this.field_192759_g.remove(p_192742_1_);
-            this.field_192760_h.add(p_192742_1_);
+            this.field_192759_g.remove(advancement);
+            this.field_192760_h.add(advancement);
         }
 
-        if (flag != flag1 && p_192742_1_.func_192070_b() != null) {
-            this.func_192742_b(p_192742_1_.func_192070_b());
+        if (flag != flag1 && advancement.func_192070_b() != null) {
+            // Paper start - If we're not coming from an iterator consider this to be a root entry, otherwise
+            // market that we're entering from the parent of an iterator.
+            this.e(advancement.func_192070_b(), entryPoint == net.minecraft.advancements.PlayerAdvancements.IterationEntryPoint.ITERATOR ? net.minecraft.advancements.PlayerAdvancements.IterationEntryPoint.PARENT_OF_ITERATOR : net.minecraft.advancements.PlayerAdvancements.IterationEntryPoint.ROOT);
         }
 
-        Iterator iterator = p_192742_1_.func_192069_e().iterator();
+        // If this is true, we've went through a child iteration, entered the parent, processed the parent
+        // and are about to reprocess the children. Stop processing here to prevent O(N^2) processing.
+        if (entryPoint == net.minecraft.advancements.PlayerAdvancements.IterationEntryPoint.PARENT_OF_ITERATOR) {
+            return;
+        } // Paper end
+
+        Iterator iterator = advancement.func_192069_e().iterator();
 
         while (iterator.hasNext()) {
             Advancement advancement1 = (Advancement) iterator.next();
 
-            this.func_192742_b(advancement1);
+            this.e(advancement1, net.minecraft.advancements.PlayerAdvancements.IterationEntryPoint.ITERATOR); // Paper - Mark this call as being from iteration
         }
 
     }
