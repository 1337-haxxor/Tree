From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Wed, 1 Jul 2020 03:12:06 -0400
Subject: [PATCH] Clean up duplicated GameProfile Properties

We had a bug where we accidently cloned properties resulting in skulls
growing to large sizes and preventing login.

This now automatically cleans up the extra properties.

diff --git a/src/main/java/net/minecraft/item/SkullItem.java b/src/main/java/net/minecraft/item/SkullItem.java
index cba699938242c61ef170b41f38e1bb03b5ea2a83..589d3deba391640c7d5d26c8ea2803cfc00c1fdc 100644
--- a/src/main/java/net/minecraft/item/SkullItem.java
+++ b/src/main/java/net/minecraft/item/SkullItem.java
@@ -4,6 +4,7 @@ import com.mojang.authlib.GameProfile;
 import java.util.UUID;
 import net.minecraft.block.Block;
 import net.minecraft.nbt.CompoundNBT;
+import net.minecraft.nbt.INBT;
 import net.minecraft.nbt.ListNBT;
 import net.minecraft.nbt.NBTUtil;
 import net.minecraft.tileentity.SkullTileEntity;
@@ -60,6 +61,18 @@ public class SkullItem extends WallOrFloorItem {
             return true;
         } else {
             // CraftBukkit start
+            // Paper start - clean up old duplicated properties
+            CompoundNBT properties = p_179215_1_.func_74775_l("SkullOwner").func_74775_l("Properties");
+            for (String key : properties.func_150296_c()) {
+                ListNBT values = properties.func_150295_c(key, 10);
+                if (values.size() > 1) {
+                    INBT texture = values.get(values.size() - 1);
+                    values = new ListNBT();
+                    values.add(texture);
+                    properties.func_218657_a(key, values);
+                }
+            }
+            // Paper end
             ListNBT textures = p_179215_1_.func_74775_l("SkullOwner").func_74775_l("Properties").func_150295_c("textures", 10); // Safe due to method contracts
             for (int i = 0; i < textures.size(); i++) {
                 if (textures.get(i) instanceof CompoundNBT && !((CompoundNBT) textures.get(i)).func_150297_b("Signature", 8) && ((CompoundNBT) textures.get(i)).func_74779_i("Value").trim().isEmpty()) {
diff --git a/src/main/java/net/minecraft/nbt/NBTUtil.java b/src/main/java/net/minecraft/nbt/NBTUtil.java
index 79be2d125ffa1f72c3abbacbb39554fdfe4a1af1..4d9301c1c4e6e51b51d976b9aeabe497a6daa2b9 100644
--- a/src/main/java/net/minecraft/nbt/NBTUtil.java
+++ b/src/main/java/net/minecraft/nbt/NBTUtil.java
@@ -59,8 +59,8 @@ public final class NBTUtil {
                 while (iterator.hasNext()) {
                     String s1 = (String) iterator.next();
                     ListNBT nbttaglist = nbttagcompound1.func_150295_c(s1, 10);
-
-                    for (int i = 0; i < nbttaglist.size(); ++i) {
+                    if (nbttaglist.size() == 0) continue; // Paper - remove duplicate properties
+                    for (int i = nbttaglist.size() - 1; i < nbttaglist.size(); ++i) { // Paper - remove duplicate properties
                         CompoundNBT nbttagcompound2 = nbttaglist.func_150305_b(i);
                         String s2 = nbttagcompound2.func_74779_i("Value");
 
@@ -246,7 +246,7 @@ public final class NBTUtil {
         Optional<T> optional = p_193590_1_.func_185929_b(p_193590_3_.func_74779_i(p_193590_2_));
 
         if (optional.isPresent()) {
-            return (StateHolder) p_193590_0_.func_206870_a(p_193590_1_, (Comparable) optional.get());
+            return p_193590_0_.func_206870_a(p_193590_1_, optional.get()); // Paper - decompile error
         } else {
             NBTUtil.field_193591_a.warn("Unable to read property: {} with value: {} for blockstate: {}", p_193590_2_, p_193590_3_.func_74779_i(p_193590_2_), p_193590_4_.toString());
             return p_193590_0_;
@@ -276,8 +276,8 @@ public final class NBTUtil {
         return nbttagcompound;
     }
 
-    private static <T extends Comparable<T>> String func_190010_a(net.minecraft.state.Property<T> p_190010_0_, Comparable<?> p_190010_1_) {
-        return p_190010_0_.func_241489_a_(p_190010_1_);
+    private static <T extends Comparable<T>> String func_190010_a(net.minecraft.state.Property<T> p_190010_0_, Comparable<T> p_190010_1_) {// Paper - decompile error
+        return p_190010_0_.func_177702_a((T) p_190010_1_);// Paper - decompile error
     }
 
     public static CompoundNBT func_210822_a(DataFixer p_210822_0_, DefaultTypeReferences p_210822_1_, CompoundNBT p_210822_2_, int p_210822_3_) {
