From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mariell Hoversholm <proximyst@proximyst.com>
Date: Mon, 9 Nov 2020 20:44:51 +0100
Subject: [PATCH] Add ignore discounts API


diff --git a/src/main/java/net/minecraft/entity/merchant/villager/VillagerEntity.java b/src/main/java/net/minecraft/entity/merchant/villager/VillagerEntity.java
index fbed47e3f367431f37998d9381038b5caf6deabf..5e80a54772d7358fba1dba16bd67e4094ae31848 100644
--- a/src/main/java/net/minecraft/entity/merchant/villager/VillagerEntity.java
+++ b/src/main/java/net/minecraft/entity/merchant/villager/VillagerEntity.java
@@ -463,6 +463,7 @@ public class VillagerEntity extends AbstractVillagerEntity implements IReputatio
 
             while (iterator.hasNext()) {
                 MerchantOffer merchantrecipe = (MerchantOffer) iterator.next();
+                if (merchantrecipe.ignoreDiscounts) continue; // Paper
 
                 // CraftBukkit start
                 int bonus = -MathHelper.func_76141_d((float) i * merchantrecipe.func_222211_m());
@@ -482,6 +483,7 @@ public class VillagerEntity extends AbstractVillagerEntity implements IReputatio
 
             while (iterator1.hasNext()) {
                 MerchantOffer merchantrecipe1 = (MerchantOffer) iterator1.next();
+                if (merchantrecipe1.ignoreDiscounts) continue; // Paper
                 double d0 = 0.3D + 0.0625D * (double) j;
                 int k = (int) Math.floor(d0 * (double) merchantrecipe1.func_222218_a().func_190916_E());
 
diff --git a/src/main/java/net/minecraft/item/MerchantOffer.java b/src/main/java/net/minecraft/item/MerchantOffer.java
index 56ee74b1d3d35932863cad545b44f683b3b0fcf9..93111b585156bf08d4c66ac58c55286abdfab60b 100644
--- a/src/main/java/net/minecraft/item/MerchantOffer.java
+++ b/src/main/java/net/minecraft/item/MerchantOffer.java
@@ -17,6 +17,7 @@ public class MerchantOffer {
     private int field_222230_h;
     public float field_222231_i;
     public int field_222232_j;
+    public boolean ignoreDiscounts; // Paper
     // CraftBukkit start
     private CraftMerchantRecipe bukkitHandle;
 
@@ -25,7 +26,12 @@ public class MerchantOffer {
     }
 
     public MerchantOffer(ItemStack itemstack, ItemStack itemstack1, ItemStack itemstack2, int uses, int maxUses, int experience, float priceMultiplier, CraftMerchantRecipe bukkit) {
-        this(itemstack, itemstack1, itemstack2, uses, maxUses, experience, priceMultiplier);
+        // Paper start - add ignoreDiscounts param
+        this(itemstack, itemstack1, itemstack2, uses, maxUses, experience, priceMultiplier, false, bukkit);
+    }
+    public MerchantOffer(ItemStack itemstack, ItemStack itemstack1, ItemStack itemstack2, int uses, int maxUses, int experience, float priceMultiplier, boolean ignoreDiscounts, CraftMerchantRecipe bukkit) {
+        this(itemstack, itemstack1, itemstack2, uses, maxUses, experience, priceMultiplier, ignoreDiscounts);
+        // Paper end
         this.bukkitHandle = bukkit;
     }
     // CraftBukkit end
@@ -57,6 +63,7 @@ public class MerchantOffer {
 
         this.field_222229_g = nbttagcompound.func_74762_e("specialPrice");
         this.field_222230_h = nbttagcompound.func_74762_e("demand");
+        this.ignoreDiscounts = nbttagcompound.func_74767_n("Paper.IgnoreDiscounts"); // Paper
     }
 
     public MerchantOffer(ItemStack itemstack, ItemStack itemstack1, int i, int j, float f) {
@@ -68,10 +75,19 @@ public class MerchantOffer {
     }
 
     public MerchantOffer(ItemStack itemstack, ItemStack itemstack1, ItemStack itemstack2, int i, int j, int k, float f) {
-        this(itemstack, itemstack1, itemstack2, i, j, k, f, 0);
+        // Paper start - add ignoreDiscounts param
+        this(itemstack, itemstack1, itemstack2, i, j, k, f, false);
+    }
+    public MerchantOffer(ItemStack itemstack, ItemStack itemstack1, ItemStack itemstack2, int i, int j, int k, float f, boolean ignoreDiscounts) {
+        this(itemstack, itemstack1, itemstack2, i, j, k, f, 0, ignoreDiscounts);
     }
 
     public MerchantOffer(ItemStack itemstack, ItemStack itemstack1, ItemStack itemstack2, int i, int j, int k, float f, int l) {
+        this(itemstack, itemstack1, itemstack2, i, j, k, f, l, false);
+    }
+    public MerchantOffer(ItemStack itemstack, ItemStack itemstack1, ItemStack itemstack2, int i, int j, int k, float f, int l, boolean ignoreDiscounts) {
+        this.ignoreDiscounts = ignoreDiscounts;
+        // Paper end
         this.field_222228_f = true;
         this.field_222232_j = 1;
         this.field_222223_a = itemstack;
@@ -187,6 +203,7 @@ public class MerchantOffer {
         nbttagcompound.func_74776_a("priceMultiplier", this.field_222231_i);
         nbttagcompound.func_74768_a("specialPrice", this.field_222229_g);
         nbttagcompound.func_74768_a("demand", this.field_222230_h);
+        nbttagcompound.func_74757_a("Paper.IgnoreDiscounts", this.ignoreDiscounts); // Paper
         return nbttagcompound;
     }
 
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMerchantRecipe.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMerchantRecipe.java
index 4d0dabc734cf810fdba21f1d25c1bc1cf38faeef..e6c61847186ddd13317b475ea469438b881de566 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMerchantRecipe.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMerchantRecipe.java
@@ -17,7 +17,12 @@ public class CraftMerchantRecipe extends MerchantRecipe {
     }
 
     public CraftMerchantRecipe(ItemStack result, int uses, int maxUses, boolean experienceReward, int experience, float priceMultiplier) {
-        super(result, uses, maxUses, experienceReward, experience, priceMultiplier);
+        // Paper start - add ignoreDiscounts param
+        this(result, uses, maxUses, experienceReward, experience, priceMultiplier, false);
+    }
+    public CraftMerchantRecipe(ItemStack result, int uses, int maxUses, boolean experienceReward, int experience, float priceMultiplier, boolean ignoreDiscounts) {
+        super(result, uses, maxUses, experienceReward, experience, priceMultiplier, ignoreDiscounts);
+        // Paper end
         this.handle = new net.minecraft.item.MerchantOffer(
                 net.minecraft.item.ItemStack.field_190927_a,
                 net.minecraft.item.ItemStack.field_190927_a,
@@ -26,6 +31,7 @@ public class CraftMerchantRecipe extends MerchantRecipe {
                 maxUses,
                 experience,
                 priceMultiplier,
+                ignoreDiscounts, // Paper - add ignoreDiscounts param
                 this
         );
         this.setExperienceReward(experienceReward);
@@ -81,6 +87,18 @@ public class CraftMerchantRecipe extends MerchantRecipe {
         handle.field_222231_i = priceMultiplier;
     }
 
+    // Paper start
+    @Override
+    public boolean shouldIgnoreDiscounts() {
+        return this.handle.ignoreDiscounts;
+    }
+
+    @Override
+    public void setIgnoreDiscounts(boolean ignoreDiscounts) {
+        this.handle.ignoreDiscounts = ignoreDiscounts;
+    }
+    // Paper end
+
     public net.minecraft.item.MerchantOffer toMinecraft() {
         List<ItemStack> ingredients = getIngredients();
         Preconditions.checkState(!ingredients.isEmpty(), "No offered ingredients");
@@ -95,7 +113,7 @@ public class CraftMerchantRecipe extends MerchantRecipe {
         if (recipe instanceof CraftMerchantRecipe) {
             return (CraftMerchantRecipe) recipe;
         } else {
-            CraftMerchantRecipe craft = new CraftMerchantRecipe(recipe.getResult(), recipe.getUses(), recipe.getMaxUses(), recipe.hasExperienceReward(), recipe.getVillagerExperience(), recipe.getPriceMultiplier());
+            CraftMerchantRecipe craft = new CraftMerchantRecipe(recipe.getResult(), recipe.getUses(), recipe.getMaxUses(), recipe.hasExperienceReward(), recipe.getVillagerExperience(), recipe.getPriceMultiplier(), recipe.shouldIgnoreDiscounts()); // Paper - shouldIgnoreDiscounts
             craft.setIngredients(recipe.getIngredients());
 
             return craft;
