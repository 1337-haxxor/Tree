From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: willies952002 <admin@domnian.com>
Date: Thu, 26 Jul 2018 02:25:46 -0400
Subject: [PATCH] Implement Expanded ArmorStand API

Add the following:
- Add proper methods for getting and setting items in both hands. Deprecates old methods
- Enable/Disable slot interactions

diff --git a/src/main/java/net/minecraft/entity/item/ArmorStandEntity.java b/src/main/java/net/minecraft/entity/item/ArmorStandEntity.java
index 651cd317b29ee85b4f57e7bbd04305b87f0ef399..88d9b63f617ea35aa85eb2caea855329d12045f3 100644
--- a/src/main/java/net/minecraft/entity/item/ArmorStandEntity.java
+++ b/src/main/java/net/minecraft/entity/item/ArmorStandEntity.java
@@ -421,6 +421,7 @@ public class ArmorStandEntity extends LivingEntity {
         return enumitemslot;
     }
 
+    public final boolean isSlotDisabled(EquipmentSlotType slot) { return this.func_184796_b(slot); } // Paper - OBFHELPER
     private boolean func_184796_b(EquipmentSlotType p_184796_1_) {
         return (this.field_175442_bg & 1 << p_184796_1_.func_188452_c()) != 0 || p_184796_1_.func_188453_a() == EquipmentSlotType.Group.HAND && !this.func_175402_q();
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftArmorStand.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftArmorStand.java
index cbc1e5c83c0556fefe318dd05cd8ff4262e14646..e0acbea7d69389424931c634fc676a625ef07baa 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftArmorStand.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftArmorStand.java
@@ -238,5 +238,78 @@ public class CraftArmorStand extends CraftLivingEntity implements ArmorStand {
     public void setCanMove(boolean move) {
         getHandle().canMove = move;
     }
+
+    @Override
+    public ItemStack getItem(org.bukkit.inventory.EquipmentSlot slot) {
+        com.google.common.base.Preconditions.checkNotNull(slot, "slot");
+        return getHandle().func_184582_a(org.bukkit.craftbukkit.CraftEquipmentSlot.getNMS(slot)).asBukkitMirror();
+    }
+
+    @Override
+    public void setItem(org.bukkit.inventory.EquipmentSlot slot, ItemStack item) {
+        com.google.common.base.Preconditions.checkNotNull(slot, "slot");
+        switch (slot) {
+            case HAND:
+                getEquipment().setItemInMainHand(item);
+                return;
+            case OFF_HAND:
+                getEquipment().setItemInOffHand(item);
+                return;
+            case FEET:
+                setBoots(item);
+                return;
+            case LEGS:
+                setLeggings(item);
+                return;
+            case CHEST:
+                setChestplate(item);
+                return;
+            case HEAD:
+                setHelmet(item);
+                return;
+        }
+        throw new UnsupportedOperationException(slot.name());
+    }
+
+    @Override
+    public java.util.Set<org.bukkit.inventory.EquipmentSlot> getDisabledSlots() {
+        java.util.Set<org.bukkit.inventory.EquipmentSlot> disabled = new java.util.HashSet<>();
+        for (org.bukkit.inventory.EquipmentSlot slot : org.bukkit.inventory.EquipmentSlot.values()) {
+            if (this.isSlotDisabled(slot)) {
+                disabled.add(slot);
+            }
+        }
+        return disabled;
+    }
+
+    @Override
+    public void setDisabledSlots(org.bukkit.inventory.EquipmentSlot... slots) {
+        int disabled = 0;
+        for (org.bukkit.inventory.EquipmentSlot slot : slots) {
+            if (slot == org.bukkit.inventory.EquipmentSlot.OFF_HAND) continue;
+            net.minecraft.inventory.EquipmentSlotType nmsSlot = org.bukkit.craftbukkit.CraftEquipmentSlot.getNMS(slot);
+            disabled += (1 << nmsSlot.func_188452_c()) + (1 << (nmsSlot.func_188452_c() + 8)) + (1 << (nmsSlot.func_188452_c() + 16));
+        }
+        getHandle().field_175442_bg = disabled;
+    }
+
+    @Override
+    public void addDisabledSlots(org.bukkit.inventory.EquipmentSlot... slots) {
+        java.util.Set<org.bukkit.inventory.EquipmentSlot> disabled = getDisabledSlots();
+        java.util.Collections.addAll(disabled, slots);
+        setDisabledSlots(disabled.toArray(new org.bukkit.inventory.EquipmentSlot[0]));
+    }
+
+    @Override
+    public void removeDisabledSlots(org.bukkit.inventory.EquipmentSlot... slots) {
+        java.util.Set<org.bukkit.inventory.EquipmentSlot> disabled = getDisabledSlots();
+        for (final org.bukkit.inventory.EquipmentSlot slot : slots) disabled.remove(slot);
+        setDisabledSlots(disabled.toArray(new org.bukkit.inventory.EquipmentSlot[0]));
+    }
+
+    @Override
+    public boolean isSlotDisabled(org.bukkit.inventory.EquipmentSlot slot) {
+        return getHandle().isSlotDisabled(org.bukkit.craftbukkit.CraftEquipmentSlot.getNMS(slot));
+    }
     // Paper end
 }
