From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Phoenix616 <mail@moep.tv>
Date: Mon, 13 Jan 2020 15:40:32 +0100
Subject: [PATCH] Seed based feature search

This tries to work around the issue where the server will load
surrounding chunks up to a radius of 100 chunks in order to search for
features e.g. when running the /locate command or for treasure maps
(issue #2312).
This is done by backporting Mojang's change in 1.17 which makes it so
that the biome (generated by the seed) is checked first if the feature
can be generated before actually to load the chunk.

The only downside of this is that it breaks once the seed or generator
changes but this should usually not happen. A config option to disable
this improvement is added though in case that should ever be necessary.

diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
index 9a0ade5875c34487a65f82f9380f9d25b4432586..ff0e4447b6574e91bf8815de4e04ce881ed7026d 100644
--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
@@ -331,6 +331,12 @@ public class PaperWorldConfig {
         }
     }
 
+    public boolean seedBasedFeatureSearch = true;
+    private void seedBasedFeatureSearch() {
+        seedBasedFeatureSearch = getBoolean("seed-based-feature-search", seedBasedFeatureSearch);
+        log("Feature search is based on seed: " + seedBasedFeatureSearch);
+    }
+
     public int maxCollisionsPerEntity;
     private void maxEntityCollision() {
         maxCollisionsPerEntity = getInt( "max-entity-collisions", this.spigotConfig.getInt("max-entity-collisions", 8) );
diff --git a/src/main/java/net/minecraft/util/math/ChunkPos.java b/src/main/java/net/minecraft/util/math/ChunkPos.java
index 2430f023866f6360cbd29e3b21e74916a1056af1..a7b1744496100646c8221381eccd9c006d47621e 100644
--- a/src/main/java/net/minecraft/util/math/ChunkPos.java
+++ b/src/main/java/net/minecraft/util/math/ChunkPos.java
@@ -67,10 +67,12 @@ public class ChunkPos {
         }
     }
 
+    public int getBlockX() { return func_180334_c(); } // Paper - OBFHELPER
     public int func_180334_c() {
         return this.field_77276_a << 4;
     }
 
+    public int getBlockZ() { return func_180333_d(); } // Paper - OBFHELPER
     public int func_180333_d() {
         return this.field_77275_b << 4;
     }
diff --git a/src/main/java/net/minecraft/world/World.java b/src/main/java/net/minecraft/world/World.java
index f591f6497d4b926023f70b813940e47b65c8d44e..e901ea9b1f00a1fde9c49673f3b24b57deee4b3e 100644
--- a/src/main/java/net/minecraft/world/World.java
+++ b/src/main/java/net/minecraft/world/World.java
@@ -1510,8 +1510,8 @@ public abstract class World implements IWorld, AutoCloseable {
         return this.field_72984_F;
     }
 
-    @Override
-    public BiomeManager func_225523_d_() {
+    public BiomeManager getBiomeManager() { return func_225523_d_(); } // Paper - OBFHELPER
+    @Override public BiomeManager func_225523_d_() {
         return this.field_226689_w_;
     }
 
diff --git a/src/main/java/net/minecraft/world/biome/BiomeManager.java b/src/main/java/net/minecraft/world/biome/BiomeManager.java
index c9d027f521c74c99ffca0d84db7b2b3234a57a5c..bc32925adb5c7b6c7ed5d11b68bda2cfcde3d363 100644
--- a/src/main/java/net/minecraft/world/biome/BiomeManager.java
+++ b/src/main/java/net/minecraft/world/biome/BiomeManager.java
@@ -24,6 +24,7 @@ public class BiomeManager {
         return new BiomeManager(p_226835_1_, this.field_226833_b_, this.field_226834_c_);
     }
 
+    public Biome getBiome(BlockPos blockposition) { return func_226836_a_(blockposition); } // Paper - OBFHELPER
     public Biome func_226836_a_(BlockPos p_226836_1_) {
         return this.field_226834_c_.func_225532_a_(this.field_226833_b_, p_226836_1_.func_177958_n(), p_226836_1_.func_177956_o(), p_226836_1_.func_177952_p(), this.field_226832_a_);
     }
diff --git a/src/main/java/net/minecraft/world/gen/feature/structure/Structure.java b/src/main/java/net/minecraft/world/gen/feature/structure/Structure.java
index b9b1b7ca147885981f7921edf43676fc866a6f66..c1c2efb236327b209db17ce97f79855d6f164587 100644
--- a/src/main/java/net/minecraft/world/gen/feature/structure/Structure.java
+++ b/src/main/java/net/minecraft/world/gen/feature/structure/Structure.java
@@ -168,6 +168,14 @@ public abstract class Structure<C extends IFeatureConfig> {
                             int j2 = i1 + k * l1;
                             ChunkPos chunkcoordintpair = this.func_236392_a_(p_236388_7_, p_236388_6_, seededrandom, i2, j2);
                             if (!p_236388_1_.func_175723_af().isChunkInBounds(chunkcoordintpair.field_77276_a, chunkcoordintpair.field_77275_b)) { continue; } // Paper
+                            // Paper start - seed based feature search
+                            if (p_236388_2_.getWorld().paperConfig.seedBasedFeatureSearch) {
+                                Biome biomeBase = p_236388_2_.getWorld().getBiomeManager().getBiome(new BlockPos(chunkcoordintpair.getBlockX() + 9, 0, chunkcoordintpair.getBlockZ() + 9));
+                                if (!biomeBase.func_242440_e().func_242493_a(this)) {
+                                    continue;
+                                }
+                            }
+                            // Paper end
                             IChunk ichunkaccess = p_236388_1_.func_217348_a(chunkcoordintpair.field_77276_a, chunkcoordintpair.field_77275_b, ChunkStatus.field_222606_b);
                             StructureStart<?> structurestart = p_236388_2_.func_235013_a_(SectionPos.func_218156_a(ichunkaccess.func_76632_l(), 0), this, ichunkaccess);
 
